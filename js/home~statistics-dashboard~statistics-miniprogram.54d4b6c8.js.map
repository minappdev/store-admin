{"version":3,"sources":["webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/utils-lite/lib/index.es.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/v-charts/lib/core.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/v-charts/lib/utils.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/numerify/lib/index.es.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/v-charts/lib/constants.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/echarts/lib/chart/line/helper.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/v-charts/lib/line.common.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["echarts","__webpack_require__","registerAction","type","event","update","zrUtil","layout","gridModel","axisModel","opt","grid","coordinateSystem","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","position","axisPosition","axisDim","dim","rect","getRect","rectBound","x","width","y","height","idx","left","right","top","bottom","onZero","axisOffset","get","posBound","onZeroCoord","toGlobalCoord","dataToCoord","Math","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","retrieve","labelInside","labelRotate","z2","exports","graphic","extendComponentView","render","ecModel","this","group","removeAll","add","Rect","shape","style","defaults","fill","getItemStyle","silent","registerPreprocessor","option","xAxis","yAxis","ComponentModel","ComponentView","_sourceHelper","detectSourceFormat","_sourceType","SERIES_LAYOUT_BY_COLUMN","extend","defaultOption","seriesLayoutBy","sourceHeader","dimensions","source","optionUpdated","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","minRunLength","n","r","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","t","binaryInsertionSort","start","mid","pivot","gallopLeft","value","length","hint","lastOffset","maxOffset","offset","tmp","m","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","pushRun","_runStart","_runLength","mergeRuns","mergeAt","forceMergeRuns","i","start1","length1","start2","length2","k","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","Error","customCursor","customDest","sort","remaining","ts","minRun","force","module","windingLine","EPSILON","isAroundEqual","a","b","abs","contain","points","w","p","p2","p0","Clip","color","_util","isArrayLike","arraySlice","Array","prototype","slice","defaultGetter","target","key","defaultSetter","interpolateNumber","p1","percent","interpolateString","interpolateArray","out","arrDim","len","len2","j","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","push","call","isNaN","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","ret","rgba2String","rgba","floor","join","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","parse","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","life","loop","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","hasOwnProperty","during","callback","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","self","clipCount","animation","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","cb","getClips","_default","zrColor","eventUtil","env","formatUtil","each","toCamelCase","vendors","gCssText","assembleTransition","duration","transitionCurve","transitionText","map","vendorPrefix","assembleFont","textStyleModel","cssText","fontSize","getTextColor","getFont","round","name","val","assembleCssText","tooltipModel","transitionDuration","backgroundColor","getModel","padding","canvasSupported","toHex","borderName","camelCase","normalizeCssArray","TooltipContent","container","api","wxa","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","e","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","constructor","stl","currentStyle","defaultView","getComputedStyle","domStyle","show","display","innerHTML","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","setTimeout","bind","isShow","GestureMgr","_track","dist","pointPair","dx","dy","sqrt","center","recognize","root","_doTrack","_recognize","clear","touches","trackItem","touch","pos","clientToLocal","zrX","zrY","eventName","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchScale","isFinite","pinchCenter","pinchX","pinchY","matrix","vector","mIdentity","identity","isNotAroundZero","Transformable","opts","scale","origin","transformableProto","transform","needLocalTransform","updateTransform","parent","parentHasTransform","create","getLocalTransform","mul","copy","invTransform","invert","setTransform","ctx","dpr","restoreTransform","tmpTransform","decomposeTransform","sx","sy","atan2","getGlobalScale","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","rotate","Displayable","BoundingRect","imageHelper","ZImage","brush","prevEl","src","image","_image","createOrUpdateImage","onload","isImageReady","aspect","sWidth","sHeight","drawImage","text","drawRectText","getBoundingRect","_rect","inherits","_config","_model","__DEV__","makeInner","getDataItemValue","_referHelper","getCoordSysDefineBySeries","createHashMap","isArray","isString","isObject","isTypedArray","Source","assert","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","inner","datasetModel","data","sourceFormat","item","getSource","seriesModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","dimensionsDefine","getDatasetModel","datasetOption","completeResult","completeBySourceData","encodeDefine","encode","makeDefaultEncode","startIndex","dimensionsDetectCount","normalizeDimensionsDefine","findPotentialName","potentialNameDimIndex","arrayRowsTravelFirst","index","objectRowsCollectDimensions","colArr","value0","nameMap","displayName","exist","count","set","maxLoop","Infinity","obj","firstIndex","coordSysDefine","encodeItemName","encodeSeriesName","seriesType","subType","nSeriesMap","cSeriesMap","uid","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","thisData","getComponent","datasetIndex","guessOrdinal","dimIndex","result","dimName","sample","detectValue","row","modelUtil","finder","point","seriesIndex","getSeriesByIndex","getData","dataIndex","queryDataIndex","getItemGraphicEl","coordSys","getTooltipPosition","dataToPoint","getValues","mapDimension","clone","_symbol","createSymbol","_number","parsePercent","_labelHelper","getDefaultLabel","SymbolClz","seriesScope","Group","updateData","symbolProto","getSymbolSize","symbolSize","getItemVisual","getScale","driftSymbol","drift","_createSymbol","symbolType","keepAspect","symbolPath","attr","culling","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","trigger","downplay","setZ","zlevel","z","setDraggable","draggable","cursor","hostModel","isInit","updateProps","_updateCommon","fadeIn","opacity","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","strokeNoScale","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","labelModel","hoverLabelModel","hoverAnimation","cursorStyle","hasItemOption","itemModel","getItemModel","getShallow","elStyle","setColor","symbolInnerColor","setStyle","liftZ","z2Origin","__z2Origin","useNameLabel","getLabelDefaultText","getName","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","off","hoverStyle","setHoverStyle","isAnimationEnabled","onEmphasis","incremental","ratio","animateTo","onNormal","on","fadeOut","keepLabel","createListFromArray","axisHelper","axisModelCommonMixin","Model","_layout","getLayoutRect","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","createDimensions","createList","dataStack","createScale","dataExtent","isInstance","mixin","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","ArrayCtor","Float32Array","m1","m2","out0","out1","out2","out3","out4","out5","translate","v","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","register","node","records","initGlobalListeners","record","useHandler","eventType","dis","makeDispatchAction","dispatchAction","dispatchTooltipFinally","pendings","initialized","curry","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","payload","pendingList","unregister","Scale","OrdinalMeta","scaleProto","OrdinalScale","init","ordinalMeta","extent","categories","_ordinalMeta","_extent","getOrdinal","rank","normalize","getTicks","ticks","getLabel","isBlank","unionExtentFromData","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","noop","niceExtent","Style","Element","RectText","__clipPaths","__dirty","invisible","dragging","rectHover","progressive","inplace","beforeBrush","afterBrush","rectContain","traverse","context","coord","dirty","__zr","refresh","animateStyle","animate","attrKV","arrySlice","Eventful","_$handlers","one","_h","h","isSilent","newList","l","args","arguments","argLen","apply","splice","triggerWithContext","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","list","concat","getCoordinateSystems","coordinateSystemCreator","curve","vec2","bbox","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min2","max2","mathMin","mathMax","mathCos","mathSin","mathSqrt","mathAbs","hasTypedArray","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","getContext","beginPath","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","x0","y0","toStatic","stroke","setLineDash","lineDash","lineDashSum","setLineDashOffset","setData","appendPath","path","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","ceil","mathFloor","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","getFullYear","getMonth","getDate","splitNumber","minInterval","maxInterval","interval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","yearStep","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","methodName","model","useUTC","SeriesModel","dependencies","getInitialData","legendHoverLink","clipOverflow","label","lineStyle","step","smooth","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","animationEasing","hoverLayerThreshold","wx","getSystemInfoSync","browser","os","svgSupported","touchEventsSupported","worker","navigator","detect","userAgent","ua","firefox","match","ie","edge","weChat","test","version","SVGRect","pointerEventsSupported","pathTool","colorTool","Path","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","IncrementalDisplayable","EMPTY_OBJ","extendShape","extendPath","pathData","extendFromString","makePath","createFromString","boundingRect","centerGraphic","resizePath","makeImage","imageUrl","img","mergePath","pathRect","calculateTransform","subPixelOptimizeLine","param","lineWidth","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelDimIndex","showNormal","showEmphasis","getFormattedLabel","isFunction","normalStyleText","emphasisStyleText","retrieve2","setTextStyle","textStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","defaultColor","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","indexOf","gTextStyleModel","trim","animateOrSetProps","isUpdate","animatableModel","animationEnabled","postfix","animationDelay","getAnimationDelayParams","getTransform","ancestor","mat","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap1","getElMap","isGroup","anid","oldEl","newProp","getAnimatableProps","g","elMap","clipPointsByRect","clipRectByRect","targetRect","createIcon","iconStr","replace","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","merge","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","processSeries","seriesOpt","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","leaves","toArr","o","toObj","isTheme","series","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geo","geoOpt","regions","regionObj","timeline","timelineOpt","toolbox","toolboxOpt","feature","featureOpt","tooltip","properties","excludes","includes","title","polygon","lineX","lineY","keep","dataView","lang","dataZoom","zoom","back","magicType","line","bar","stack","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","tree","treemap","boxplot","candlestick","heatmap","lines","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","end","allData","partialData","isDataItemOption","DefaultDataProvider","dimSize","seriesDataToSource","_source","_data","_offset","_dimSize","methods","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","dims","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","dataItem","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","dimInfo","dimType","parseAndCollect","NaN","retrieveRawValue","getRawDataItem","getProvider","getDimensionInfo","retrieveRawAttr","fixShadow","STYLE_COMMON_PROPS","createLinearGradient","global","canvasGradient","createRadialGradient","lineDashOffset","shadowBlur","shadowOffsetX","shadowOffsetY","font","textFont","textRect","transformText","textOrigin","truncate","blend","prevStyle","firstDraw","prop","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","colorStops","addColorStop","styleProto","debugMode","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","coordDimIndex","isExtraCoord","mayLabelDimType","defaultTooltip","otherDim","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","encodeTooltip","getDimensionTypeByAxis","axisType","util","_event","Dispatcher","requestAnimationFrame","Animation","options","stage","_clips","_running","_time","_pausedTime","_pauseStart","addAnimator","clips","removeAnimator","_update","getTime","delta","deferredEvents","deferredClips","_needsRemove","pop","fire","_startLoop","isFinished","List","_dimensionHelper","CoordinateSystem","coordSysDimDefs","coordSysName","registeredCoordSys","axisMap","getDimensionsInfo","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","stackCalculationInfo","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","initData","sampleItem","firstDataNotNull","transformPath","cc","vMag","vRatio","u","vAngle","acos","processArc","fa","psiDeg","xp","yp","lambda","f","cxp","cyp","createPathProxyFromString","cs","RegExp","prevCmd","arr","split","cpx","cpy","str","c","charAt","shift","parseFloat","ctlPtx","ctlPty","createPathOptions","pathProxy","buildPath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","RADIAN_EPSILON","_trim","linearMap","domain","clamp","subDomain","subRange","all","precision","returnStr","toFixed","asc","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","getPixelPrecision","pixelExtent","log","LN10","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","sum","reduce","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nf","exponent","exp10","reformIntervals","littleThan","curr","currClose","close","lg","isNumeric","_dataProvider","_format","getTooltipMarker","formatTpl","DIMENSION_LABEL_REG","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","getRawIndex","componentType","mainType","componentSubType","seriesId","id","marker","$vars","status","labelProp","params","formatter","formatTooltip","makeStyleMapper","getLineStyle","getLineDash","lineType","dotSize","dashSize","Displayble","IncrementalDisplayble","_displayables","_temporaryDisplayables","_cursor","notClear","clearDisplaybles","addDisplayable","displayable","notPersistent","addDisplayables","displayables","eachPendingDisplayable","childRect","union","localPos","zrender","timsort","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","ChartView","_throttle","throttle","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","toLowerCase","MessageCenter","ECharts","dom","theme","themeStorage","_dom","defaultRenderer","renderer","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","_pendingActions","_onframe","bindRenderedEvent","setAsPrimitive","echartsProto","doConvertPixel","coordSysList","parseFinder","_disposed","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","unfinished","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","getOption","getDevicePixelRatio","getRenderedCanvas","pixelRatio","getSvgDataUrl","storage","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","MAX_NUMBER","connectedGroups","canvasList","instances","chart","canvas","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","coordSysMgr","restoreData","clearColorPalette","setBackgroundColor","colorArr","stringify","performPostUpdateFuncs","ecIns","componentDirtyList","componentView","__alive","seriesDirtyMap","eachSeries","chartView","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","query","condition","excludeSeriesId","normalizeToArray","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","main","sub","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","componentIndex","renderTask","dispose","remove","renderComponents","dirtyList","updateZ","updatePayload","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","elCount","blendMode","ecInstance","getComponentByElement","modelInfo","eveName","dataModel","eventData","actionType","isDisposed","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","otherChart","otherCharts","existInstance","getInstanceByDom","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","registerLayout","layoutTask","registerVisual","visualTask","targetList","fn","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","extendComponentModel","extendSeriesModel","extendChartView","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","features","JSON","Function","getMap","dataTool","___ec_export","scaleAndAdd","lenSquare","lengthSquare","div","dot","s","distance","distanceSquare","distSquare","negate","lerp","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","op","ep","fname","substr","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","B","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","Gradient","findPointFromSeries","layoutUtil","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","triggerOn","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","from","_ticket","dataByCoordSys","offsetX","offsetY","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisIndex","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","axisId","getAxisRawValue","axisValueLabel","firstLine","encodeHTML","reverse","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","html","cbTicket","viewWidth","viewHeight","contentSize","align","vAlign","viewSize","layoutRect","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","gapH","gapV","size","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","domWidth","domHeight","gap","rectWidth","rectHeight","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","customizeGetParent","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","r0","PI2","legendSelectActionHandler","isSelected","selectedMap","isToggleSelect","legendModel","legendData","isItemSelected","selected","globalCoord","AxisPointerModel","snap","triggerTooltip","link","animationDurationUpdate","shadowStyle","margin","borderColor","borderWidth","shadowColor","handle","icon","axisModelCreator","AxisModel","superApply","queryComponents","gridIndex","gridId","getAxisType","extraOption","_vector","v2Create","v2DistSquare","mathPow","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","onet","cubicDerivativeAt","cubicRootAt","roots","t1","disc","K","discSqrt","Y1","Y2","T","ASqrt","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","_t","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","BaseAxisPointer","viewHelper","cartesianAxisHelper","AxisView","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getOtherAxis","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","axisExtent","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","verticalAlign","targetShape","makeLineShape","getAxisDimIndex","shadow","bandWidth","getBandWidth","makeRectShape","registerAxisPointerClass","fixClipWithShadow","clockwise","unitX","unitY","debounce","timer","wait","previous","now","targetTemp","forEach","defaultValue","some","undefined","getStore","localStorage","setStore","setItem","__webpack_exports__","cloneDeep","getTypeof","isBoolean","isEmptyObj","isNumber","kebabToCamel","camelToKebab","unique","getLinearValue","getFnAndObjValue","arrDelItem","arrDelArrItem","getArrMin","getArrMax","toArray","isEqual","hasOwn","_typeof","Symbol","iterator","Object","keys","assign","_","diffItem","filter","diffArr","alice","bob","aliceValue","bobValue","aliceType","_key","dev","addCommas","colorPaletteMixin","dataFormatMixin","getLayoutParams","mergeLayoutParam","_task","createTask","legendDataProvider","visualColorAccessPath","layoutMode","extraOpt","dataTask","dataTaskCount","reset","dataTaskReset","mergeDefaultAndTheme","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","defaultEmphasis","fillDataTextStyle","newSeriesOption","getRawData","task","getCurrentTask","getLinkedData","modifyOutputEnd","setOutputEnd","outputData","getBaseAxis","multipleSeries","formatArrayValue","vertially","setEachItem","dimHead","valStr","tooltipDims","formatSingleValue","tooltipDimLen","isValueArr","formattedValue","colorEl","isNameSpecified","getColorFromPalette","scope","requestColorNum","coordDimToDataDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","pipeTask","preventIncremental","pipelineContext","getSeriesAutoName","dataDims","nameArr","cloneShallow","dataTaskProgress","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","smoothSpline","smoothBezier","controlPoints","smoothConstraint","cp1","cp2","getBorderLineDash","r1","r2","r3","r4","total","_axisHelper","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","otherAxes","onZeroAxisIndex","canOnZeroToAxis","updateAxisTransform","coordBase","getExtent","axisExtentSum","toLocalCoord","axisPointerEnabled","_updateScale","ignoreContainLabel","gridRect","getBoxLayoutParams","axesList","adjustAxes","isHorizontal","inverse","labelUnionRect","getAxis","axesMapOnDim","getAxes","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","pointToData","coordToData","xAxisModel","getReferringComponents","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","isCategory","onBand","addAxis","isCartesian2D","axesModels","findAxesModels","getTooltipAxes","baseAxes","baseAxis","axesTypes","grids","Pattern","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","config","clearColor","motionBlur","lastFrameAlpha","__used","__drawIndex","__startIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","clearRect","__canvasGradient","getCanvasPattern","save","fillRect","globalImageCache","findExistImage","newImageOrSrc","cachedImgObj","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","_listComponent","makeBackground","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","resetInner","itemAlign","renderInner","positionInfo","viewportSize","maxSize","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","eachRawSeries","getSeriesByName","legendSymbolType","itemGroup","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","indexOfName","newline","itemWidth","itemHeight","inactiveColor","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","textX","hitRect","formatterParams","legendIndex","eachChild","__legendDataIndex","box","contentRect","dataName","isDomLevel2","addEventListener","MOUSE_EVENT_REG","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","isTouch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","attachEvent","removeEventListener","detachEvent","preventDefault","stopPropagation","cancelBubble","returnValue","notLeftMouse","DataDiffer","UNDEFINED","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareInvertedIndex","invertedIndices","getRawValueFromStore","rawIndex","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimension","getDimensionsOnCoord","dimensionsSummary","nameList","notProvider","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","getIndices","indices","thisCount","buffer","chunkStore","getByRawIndex","rawIdx","dimStore","_getFast","values","hasValue","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","getCalculationInfo","getSum","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","v2Distance","interpolate","isLoop","segs","w2","w3","TYPE_DELIMITER","IS_CONTAINER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","superClass","ExtendedClass","superCall","classBase","Clz","classAttr","enableClassManagement","entity","makeContainer","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","_interopDefault","ex","utilsLite","echartsLib","numerify","constants","Loading","_vm","$createElement","_c","_self","staticClass","attrs","viewBox","staticRenderFns","DataEmpty","_v","_extends","setExtend","setMark","seriesItem","marks","setAnimation","core","class","$options","_componentTag","canvasStyle","v-charts-mask-status","dataEmpty","loading","ref","$slots","default","settings","String","beforeConfig","afterConfig","afterSetOption","afterSetOptionOnce","events","tooltipVisible","Boolean","legendVisible","legendPosition","visualMap","initOptions","legend","themeName","judgeWidth","widthChangeDelay","tooltipFormatter","resizeable","resizeDelay","changeDelay","setOptionOpts","cancelResizeCheck","notSetUnchange","watch","deep","changeHandler","chartLib","chartHandler","computed","chartColor","DEFAULT_COLORS","dataHandler","_data$columns","columns","_data$rows","rows","extra","_once","then","optionsHandler","nextTickResize","$nextTick","echartsResize","$el","_this","orient","ECHARTS_SETTINGS","setting","bmap","amap","_store","_isDestroyed","$emit","judgeWidthHandler","_this2","warn","resizeableHandler","onresize","addResizeListener","removeResizeListener","DEFAULT_THEME","$refs","createEventProxy","resizeHandler","addWatchToProps","_this3","watchedVariable","_watchers","watcher","expression","$props","STATIC_PROPS","$watch","_this4","ev","registeredEvents","themeChange","created","mounted","beforeDestroy","_numerify","axisPointerModelHelper","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","_curve","containStroke","_l","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","getScaleExtent","axisDataLen","boundaryGap","scaleType","originalExtent","getCategories","setBlank","isBaseAxisAndHasBarSeries","barSeriesModels","barWidthAndOffset","adjustedScale","adjustScaleForOverflow","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","base","setInterval","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tpl","tickValue","tick","realNumberScaleTicks","tickCount","categoryScaleExtent","axisLabelModel","unrotatedSingleRect","getTextRect","singleRect","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","guid","Handler","Storage","Painter","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","delInstance","rendererType","vml","handerProxy","getViewportRoot","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","eventHandler","_component","getUID","dataProcessorHandlers","visualHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","performRawSeries","isSeriesFiltered","taskRecord","_pipelineMap","pCtx","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","modDataCount","modBy","dataLen","incrementalPrepareRender","threshold","large","pipelineMap","head","tail","pipe","stageTaskMap","createSeriesStageTask","overallReset","createOverallStageTask","__block","getUpstream","getTargetSeries","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createOnAllSeries","eachRawSeriesByType","removeKey","overallTaskReset","overallProgress","createStub","stubReset","onDirty","stubOnDirty","agent","getSeries","upstreamContext","stubProgress","getDownstream","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","dataEach","progress","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","eachSeriesByType","cond","componentUtil","boxLayoutMixin","dependentModels","themeModel","newCptOption","fields","optList","Class","getDependencies","deps","unshift","enableSubTypeDefaulter","enableTopologicalTravel","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","arrayProto","nativeForEach","nativeFilter","nativeSlice","nativeMap","nativeReduce","typeStr","isPrimitive","isDom","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","baseClazz","clazzPrototype","F","memo","find","nodeType","ownerDocument","value1","retrieve3","value2","message","primitiveKey","HashMap","isArr","thisMap","visit","concatArray","newArray","defineProperty","getFormated","digit","defaultVal","digitStr","getStackMap","stackMap","$get","Promise","resolve","reject","xhr","XMLHttpRequest","open","send","responseText","onerror","mapPromise","getMapJSON","_ref","positionJsonLink","beforeRegisterMapOnce","mapURLProfix","bmapPromise","amapPromise","getBmap","callbackName","script","body","getAmap","setArrayValue","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","axisLine","axisTick","inside","axisLabel","showMinLabel","showMaxLabel","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","deduplication","alignWithLabel","valueAxis","timeAxis","logAxis","logBase","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","textContain","textHelper","normalizeTextStyle","needDrawText","renderText","getStroke","layoutBox","positionElement","boxLayoutParams","SHADOW_PROPS","ABBR","th","mi","bi","tr","DEFAULT_OPTIONS","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","abbrLabel","TRILLION","BILLION","MILLION","THOUSAND","numIsNaN","maxDecimals","roundingFunction","optionals","splitValue","minDecimals","boundedPrecision","power","output","optionalsRegExp","numberToFormat","format","negP","optDec","abbr","decimal","neg","abbrForce","signed","thousands","leadingCount","trillion","million","numerifyPercent","regexp","formatType","space","_numberToFormat","formats","formatFunction","kind","input","setOptions","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","initBase","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","newOption","componentsMap","newCptTypes","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","componentOption","topologicalTravel","_seriesIndicesMap","_seriesIndices","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","findComponents","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","components","queryResult","oneSeries","getSeriesByType","getSeriesCount","assertSeriesInitialized","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","existComponent","seriesModels","defaultSymbolType","legendSymbol","hasCallback","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","echartsAPIList","chartInstance","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","fixExtentWithBands","nTick","fixOnBandTicksCoords","ticksCoords","tickCategoryInterval","ticksLen","last","ticksItem","containData","getTicksCoords","tickModel","getTickModel","getViewLabels","labels","getRotate","LegendModel","ignoreSize","_updateData","hasSelected","select","potentialData","availableNames","isPotential","names","_availableNames","selectedMode","unSelect","toggleSelected","borderRadius","itemGap","normalizeRadian","angle","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","fromZero","genName","optDimCount","dir","x_","polyHelper","createRenderPlanner","isLargeRender","stackResultDim","segCount","tmpIn","tmpOut","ORIGIN_METHOD","RATE","THROTTLE_TYPE","currCall","debounceNextCall","lastCall","lastExec","thisDelay","thisDebounce","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","lastRate","subTypeDefaulters","registerSubTypeDefaulter","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationDuration","animationEasingUpdate","animationThreshold","progressiveThreshold","shadowTemp","orignalBrush","modified","clipPaths","clipPath","containLabel","HEAT_MAP_COLOR","HEAT_BMAP_COLOR","itemPoint","helper","roundNumber","_intervalPrecision","thisExtent","other","getInterval","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fetch","fetchers","cartesian2d","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","parallelModel","parallelAxisIndex","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","err","originalVal","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","category","legendModels","safeLimit","_a","_b","_s","v2ApplyTransform","lt","rb","lb","rt","maxX","maxY","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","textColor","maskColor","mask","lineCap","labelRect","animateShape","setShape","getAreaStyle","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","cp0","STACK_PREFIX","LARGE_BAR_MIN_WIDTH","LargeArr","getSeriesStackId","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","isOnCartesian","isInLargeMode","barSeries","seriesInfoList","barWidth","barMaxWidth","barGap","barCategoryGap","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","valueDim","baseDim","stacked","isValueAxisH","valueAxisStart","getValueAxisStart","baseValue","sign","baseCoord","largeLayout","valueAxisHorizontal","valueDimIdx","largePoints","valuePair","tmpRect","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","thisOption","__ordinalMeta","prepareDataCoordInfo","valueOrigin","valueStart","getValueStart","baseAxisDim","valueAxisDim","baseDataOffset","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","roundRectHelper","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","makeFont","textBaseline","renderRichText","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","outerHeight","textLines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textY","needDrawBg","needDrawBackground","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","tokenStyle","isLineHolder","isPlainBg","onBgImageLoaded","blockHeiht","adjustTextPositionOnRect","maxValue","lastIndexOf","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","extraCssText","crossStyle","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","beforeUpdate","afterUpdate","userSetClipPath","currentClipPath","parentClipPath","children","_children","__storage","addChildrenToStorage","delChildrenFromStorage","_renderList","displayableSortFunc","clazzUtil","Component","componentProto","dimensionsCount","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","getSeriesTypeName","displayCnt","dataLabels","keyValues","userConfig","Animatable","animators","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","Region","decode","json","UTF8Encoding","encodeScale","UTF8Scale","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","charCodeAt","featureObj","geometries","exterior","interiors","region","cp","utils","Core","getLineXAxis","xAxisName","axisVisible","xAxisType","getLineSeries","axisSite","metrics","area","nullAddZero","labelMap","dataTemp","getLineYAxis","yAxisName","yAxisType","yAxisBase","getLineTooltip","rightItems","rightList","items","_items$","showData","itemData","getLegend","legendName","line$1","_settings$axisSite","_settings$yAxisType","_settings$xAxisType","_settings$yAxisName","_settings$dimension","_settings$xAxisName","_settings$axisVisible","_settings$scale","_settings$min","_settings$max","_settings$nullAddZero","_settings$digit","_settings$legendName","_settings$labelMap","colorAll","labelDims","vals","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","Draggable","_dragStart","_drag","_dragEnd","topTarget","draggingTarget","_draggingTarget","dispatchToElement","dropTarget","lastDropTarget","_dropTarget","axisTrigger","collect","pathContain","pathProxyForDraw","strokeContainThreshold","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","dirtyPath","__clipTarget","Sub","defaultShape","thisShape","Cartesian","getAxesByScale","axisX","axisY","reserved","clampData","xScale","yScale","xAxisExtent","yAxisExtent","originalLarge","originalProgressive","axesInfo","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","makeKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","involveSeries","axisInfo","useHandle","groupIndex","getLinkGroupIndex","linkGroup","mapper","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","TOUCH_CLICK_DELAY","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","gestureEvent","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mousemove","mouseout","element","toElement","relatedTarget","parentNode","touchstart","_lastTouchMoment","mousedown","touchmove","touchend","mouseup","click","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","_handlers","HandlerDomProxy","mountHandlers","handlerNames","handlerDomProxyProto","setCursor","dimAxisMapper","_axes","_dimList","_dataCoordConvert","dimList","stackInfoMap","stackInfoList","stackInfo","stackResultDimension","stackedDimension","stackedByDimension","isStackedByIndex","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","legendFilter","SILENT","makeEventPacket","eveType","targetInfo","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","AxisPointerView","paths","_updatePathDirty","vec2Min","vec2Max","v2Copy","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","drawMono","drawNonMono","prevIdx","prevP","ctrlLen","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","pt","stackedOnPoints","stackedOnSmooth","stackedOnBBox","LinkedList","linkedListProto","insert","entry","Entry","insertEntry","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","setClipPath","removeClipPath","cubic","quadratic","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","windingArc","containPath","isStroke","repeat","createPattern","eventTool","throttleUtil","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xy","wh","xDimIndex","idStart","makeCategoryLabels","makeRealNumberLabels","makeCategoryTicks","makeCategoryLabelsActually","labelCategoryInterval","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","ticksCache","optionTickInterval","labelsResult","labelItem","formattedLabel","rawLabel","cache","autoInterval","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","unitSpan","unitW","unitH","maxW","maxH","dw","dh","lastAutoInterval","lastTickCount","categoryInterval","onlyTick","startTick","showMinMax","addItem","tVal","DUMMY_COMPONENT_NAME_PREFIX","subOpts","subOptName","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","lenj","isData","innerUniqueIndex","hostObj","has","parsedKey","queryType","includeMainTypes","queryParam","_setting","_isBlank","childOfName","childCount","_doAdd","addBefore","nextSibling","includeChildren","tmpMat","extremity","fromPoints","xDim","yDim","tx","ty","getNearestColorPalette","paletteNum","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","measureText","getRichTextRect","getPlainTextRect","halfHeight","truncateText","containerWidth","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","matchedIndex","pushTokens","substring","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","renderPlanner","Chart","renderTaskPlan","renderTaskReset","toggleHighlight","incrementalRender","chartProto","elSetState","state","progressMethodMap","forceFirstProgress","modelHelper","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","outputAxesInfo","valItem","highDownKey","lastHighlights","newHighlights","toHighlight","toDownplay","coordExtent","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","parseInt10","isLayerValid","__builtin__","viewRect","isDisplayableCulled","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","_domRoot","_getSize","_hoverlayer","_hoverElements","isSingleCanvas","viewportRoot","paintAll","_redrawId","_paintList","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","firstEl","error","dTime","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","incrementalLayerCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","upperCaseFirst","group1","replaceReg","replaceMap","&","<",">","\"","'","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","paramsList","seriesLen","alias","formatTplSimple","pad","isUTC","utc","capitalFirst","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDim","targetDim","mathAtan2","nPoint","visualSymbol","layoutPoints","dataSample","_helper","diffData","oldData","diffResult","newIdx","oldIdx","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","stackedOnCurrent","stackedOnNext","SymbolDraw","lineAnimationDiff","_poly","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","createGridClipShape","hasAnimation","forSymbol","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","gradient","getIsIgnoreFunc","isAuto","canShowAllSymbolForCategory","categoryDataDim","availSize","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isIgnoreFunc","__temp","_step","_newPolygon","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSeries","_valueOrigin","__points","updatedDataInfo","diffStatus","ptIdx","contrastColor","axisCommon","iconStyle","controlStyle","color0","borderColor0","AxisBuilder","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","getGroup","_splitAreaColors","_splitLine","splitLineModel","lineColors","lineCount","tickCoord","colorIndex","_splitArea","splitAreaModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","polygonContain","loopGeo","transformTo","define","Task","_reset","_plan","_onDirty","_dirty","taskProto","planResult","upTask","_upstream","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","_dueEnd","_outputDueEnd","_progress","_dueIndex","doProgress","outputDueEnd","_settedOutputEnd","winCount","it","sStep","sCount","modNext","sequentialNext","taskIns","_callingProgress","downstream","_downstream","downTask","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","normalizeUpdateOpt","makeSeriesScope","SymbolCtor","symbolEl","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","LOCATION_PARAMS","HV_NAMES","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","vbox","hbox","getAvailableSize","containerRect","containerHeight","verticalMargin","horizontalMargin","hv","boundingMode","elPos","sizeCalculable","hvIdx","targetOption","hResult","vResult","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","copyLayoutParams","matrixUtil","makeAxisEventDataBase","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","labelLayout","axisNameAvailableWidth","gapSignal","isNameLocationCenter","nameRotation","innerTextLayout","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","textEl","__fullText","__truncatedText","targetType","axisRotation","rotationDiff","textRotate","onLeft","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","tickLen","tickEl","axisLabelShow","labelRotation","rawCategoryData","itemLabelModel","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","dataRange","componentName","colorAccessPath","samplers","average","nearest","indexSampler","sampler","graphicUtil","PATH_COLOR","styleModel","buildLabelElOption","labelPos","paddings","confineInContainer","bgColor","seriesData","textLayout","makeSectorShape"],"mappings":"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","file":"js/home~statistics-dashboard~statistics-miniprogram.54d4b6c8.js","sourcesContent":["var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","function debounce(fn, delay) {\n  var timer = null;\n  return function () {\n    var self = this;\n    var args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(self, args);\n    }, delay);\n  };\n}\n\nfunction throttle(fn, wait, delay) {\n  var timer = null;\n  var previous = null;\n\n  return function () {\n    var self = this;\n    var args = arguments;\n    var now = Date.now();\n    if (!previous) previous = now;\n    if (now - previous > wait) {\n      fn.apply(self, args);\n      previous = now;\n    } else if (delay) {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        fn.apply(self, args);\n      }, delay);\n    }\n  };\n}\n\nfunction set(target, path, value) {\n  if (!path) return;\n  var targetTemp = target;\n  var pathArr = path.split('.');\n  pathArr.forEach(function (item, index) {\n    if (index === pathArr.length - 1) {\n      targetTemp[item] = value;\n    } else {\n      if (!targetTemp[item]) targetTemp[item] = {};\n      targetTemp = targetTemp[item];\n    }\n  });\n}\n\nfunction get(target, path, defaultValue) {\n  if (!path) return target;\n  var pathArr = path.split('.');\n  var targetTemp = target;\n  pathArr.some(function (item, index) {\n    if (targetTemp[item] === undefined) {\n      targetTemp = defaultValue;\n      return true;\n    } else {\n      targetTemp = targetTemp[item];\n    }\n  });\n  return targetTemp;\n}\n\nfunction getStore(name) {\n  try {\n    return JSON.parse(window.localStorage.getItem(name));\n  } catch (e) {}\n}\n\nfunction setStore(name, data) {\n  try {\n    window.localStorage.setItem(name, JSON.stringify(data));\n  } catch (e) {}\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction getType(v) {\n  return Object.prototype.toString.call(v);\n}\n\nfunction getTypeof(v) {\n  return typeof v === 'undefined' ? 'undefined' : _typeof(v);\n}\n\nfunction isObject(v) {\n  return getType(v) === '[object Object]';\n}\n\nfunction isArray(v) {\n  return getType(v) === '[object Array]';\n}\n\nfunction isFunction(v) {\n  return getType(v) === '[object Function]';\n}\n\nfunction isString(v) {\n  return getType(v) === '[object String]';\n}\n\nfunction isBoolean(v) {\n  return getType(v) === '[object Boolean]';\n}\n\nfunction isEmptyObj(v) {\n  return isObject(v) && !Object.keys(v).length;\n}\n\nfunction isNumber(v) {\n  return getType(v) === '[object Number]';\n}\n\nfunction clone(v) {\n  if (isObject(v)) return Object.assign({}, v);\n  if (isArray(v)) return v.slice();\n}\n\nfunction cloneDeep(v) {\n  return JSON.parse(JSON.stringify(v));\n}\n\nfunction kebabToCamel(s) {\n  return s.replace(/-(\\w)/g, function (_, c) {\n    return c.toUpperCase();\n  });\n}\n\nfunction camelToKebab(s) {\n  return s.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nfunction unique(arr) {\n  var result = [];\n  arr.forEach(function (item) {\n    if (!~result.indexOf(item)) result.push(item);\n  });\n  return result;\n}\n\nfunction getLinearValue(x1, y1, x2, y2, x3) {\n  var k = (y2 - y1) / (x2 - x1);\n  var b = y1 - x1 * k;\n  if (x3 == null) {\n    return { k: k, b: b };\n  } else {\n    return x3 * k + b;\n  }\n}\n\nfunction getFnAndObjValue(target, key) {\n  return isFunction(target) ? target(key) : !isObject(target) ? key : target[key] != null ? target[key] : key;\n}\n\nfunction arrDelItem(arr, diffItem) {\n  return arr.filter(function (item) {\n    return diffItem !== item;\n  });\n}\n\nvar arrDelArrItem = function arrDelArrItem(arr, diffArr) {\n  return arr.filter(function (item) {\n    return !~diffArr.indexOf(item);\n  });\n};\n\nfunction getArrMin(arr) {\n  return Math.min.apply(null, arr);\n}\n\nfunction getArrMax(arr) {\n  return Math.max.apply(null, arr);\n}\n\nfunction toArray(v) {\n  return Array.prototype.slice.call(v);\n}\n\nfunction noop() {}\n\nfunction hasOwn(source, target) {\n  return Object.prototype.hasOwnProperty.call(source, target);\n}\n\nvar extend = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (hasOwn(source, key)) target[key] = source[key];\n    }\n  }\n  return target;\n};\n\nfunction isEqual(alice, bob) {\n  if (alice === bob) return true;\n  if (alice === null || bob === null || getTypeof(alice) !== 'object' || getTypeof(bob) !== 'object') {\n    return alice === bob;\n  }\n\n  for (var key in alice) {\n    if (!hasOwn(alice, key)) continue;\n    var aliceValue = alice[key];\n    var bobValue = bob[key];\n    var aliceType = getTypeof(aliceValue);\n\n    if (getTypeof(bobValue) === 'undefined') {\n      return false;\n    } else if (aliceType === 'object') {\n      if (!isEqual(aliceValue, bobValue)) return false;\n    } else if (aliceValue !== bobValue) {\n      return false;\n    }\n  }\n  for (var _key in bob) {\n    if (!hasOwn(bob, _key)) continue;\n    if (getTypeof(alice)[_key] === 'undefined') return false;\n  }\n\n  return true;\n}\n\nexport { debounce, throttle, set, get, getStore, setStore, clone, cloneDeep, getType, getTypeof, isObject, isArray, isFunction, isString, isBoolean, isEmptyObj, isNumber, kebabToCamel, camelToKebab, unique, getLinearValue, getFnAndObjValue, arrDelItem, arrDelArrItem, getArrMin, getArrMax, toArray, noop, extend, isEqual, hasOwn };\n","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar utilsLite = require('utils-lite');\nvar echartsLib = _interopDefault(require('echarts/lib/echarts'));\nrequire('echarts/lib/component/tooltip');\nrequire('echarts/lib/component/legend');\nvar numerify = _interopDefault(require('numerify'));\nvar constants = require('./constants');\n\nvar Loading = { render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-component-loading\" }, [_c('div', { staticClass: \"loader\" }, [_c('div', { staticClass: \"loading-spinner\" }, [_c('svg', { staticClass: \"circular\", attrs: { \"viewBox\": \"25 25 50 50\" } }, [_c('circle', { staticClass: \"path\", attrs: { \"cx\": \"50\", \"cy\": \"50\", \"r\": \"20\", \"fill\": \"none\" } })])])])]);\n  }, staticRenderFns: []\n};\n\nvar DataEmpty = { render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-data-empty\" }, [_vm._v(\" 暂无数据 \")]);\n  }, staticRenderFns: []\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction setExtend (options, extend) {\n  Object.keys(extend).forEach(function (attr) {\n    var value = extend[attr];\n    if (~attr.indexOf('.')) {\n      // eg: a.b.c a.1.b\n      utilsLite.set(options, attr, value);\n    } else if (typeof value === 'function') {\n      // get callback value\n      options[attr] = value(options[attr]);\n    } else {\n      // mixin extend value\n      if (utilsLite.isArray(options[attr]) && utilsLite.isObject(options[attr][0])) {\n        // eg: [{ xx: 1 }, { xx: 2 }]\n        options[attr].forEach(function (option, index) {\n          options[attr][index] = _extends({}, option, value);\n        });\n      } else if (utilsLite.isObject(options[attr])) {\n        // eg: { xx: 1, yy: 2 }\n        options[attr] = _extends({}, options[attr], value);\n      } else {\n        options[attr] = value;\n      }\n    }\n  });\n}\n\nfunction setMark (seriesItem, marks) {\n  Object.keys(marks).forEach(function (key) {\n    if (marks[key]) seriesItem[key] = marks[key];\n  });\n}\n\nfunction setAnimation (options, animation) {\n  Object.keys(animation).forEach(function (key) {\n    options[key] = animation[key];\n  });\n}\n\nvar core = {\n  render: function render(h) {\n    return h('div', {\n      class: [utilsLite.camelToKebab(this.$options.name || this.$options._componentTag)],\n      style: this.canvasStyle\n    }, [h('div', {\n      style: this.canvasStyle,\n      class: { 'v-charts-mask-status': this.dataEmpty || this.loading },\n      ref: 'canvas'\n    }), h(DataEmpty, {\n      style: { display: this.dataEmpty ? '' : 'none' }\n    }), h(Loading, {\n      style: { display: this.loading ? '' : 'none' }\n    }), this.$slots.default]);\n  },\n\n\n  props: {\n    data: { type: [Object, Array], default: function _default() {\n        return {};\n      }\n    },\n    settings: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    width: { type: String, default: 'auto' },\n    height: { type: String, default: '400px' },\n    beforeConfig: { type: Function },\n    afterConfig: { type: Function },\n    afterSetOption: { type: Function },\n    afterSetOptionOnce: { type: Function },\n    events: { type: Object },\n    grid: { type: [Object, Array] },\n    colors: { type: Array },\n    tooltipVisible: { type: Boolean, default: true },\n    legendVisible: { type: Boolean, default: true },\n    legendPosition: { type: String },\n    markLine: { type: Object },\n    markArea: { type: Object },\n    markPoint: { type: Object },\n    visualMap: { type: [Object, Array] },\n    dataZoom: { type: [Object, Array] },\n    toolbox: { type: [Object, Array] },\n    initOptions: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    title: [Object, Array],\n    legend: [Object, Array],\n    xAxis: [Object, Array],\n    yAxis: [Object, Array],\n    radar: Object,\n    tooltip: Object,\n    axisPointer: [Object, Array],\n    brush: [Object, Array],\n    geo: [Object, Array],\n    timeline: [Object, Array],\n    graphic: [Object, Array],\n    series: [Object, Array],\n    backgroundColor: [Object, String],\n    textStyle: [Object, Array],\n    animation: Object,\n    theme: Object,\n    themeName: String,\n    loading: Boolean,\n    dataEmpty: Boolean,\n    extend: Object,\n    judgeWidth: { type: Boolean, default: false },\n    widthChangeDelay: { type: Number, default: 300 },\n    tooltipFormatter: { type: Function },\n    resizeable: { type: Boolean, default: true },\n    resizeDelay: { type: Number, default: 200 },\n    changeDelay: { type: Number, default: 0 },\n    setOptionOpts: { type: [Boolean, Object], default: true },\n    cancelResizeCheck: Boolean,\n    notSetUnchange: Array,\n    log: Boolean\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler: function handler(v) {\n        if (v) {\n          this.changeHandler();\n        }\n      }\n    },\n\n    settings: {\n      deep: true,\n      handler: function handler(v) {\n        if (v.type && this.chartLib) this.chartHandler = this.chartLib[v.type];\n        this.changeHandler();\n      }\n    },\n\n    width: 'nextTickResize',\n    height: 'nextTickResize',\n\n    events: {\n      deep: true,\n      handler: 'createEventProxy'\n    },\n\n    theme: {\n      deep: true,\n      handler: 'themeChange'\n    },\n\n    themeName: 'themeChange',\n\n    resizeable: 'resizeableHandler'\n  },\n\n  computed: {\n    canvasStyle: function canvasStyle() {\n      return {\n        width: this.width,\n        height: this.height,\n        position: 'relative'\n      };\n    },\n    chartColor: function chartColor() {\n      return this.colors || this.theme && this.theme.color || constants.DEFAULT_COLORS;\n    }\n  },\n\n  methods: {\n    dataHandler: function dataHandler() {\n      if (!this.chartHandler) return;\n      var data = this.data;\n      var _data = data,\n          _data$columns = _data.columns,\n          columns = _data$columns === undefined ? [] : _data$columns,\n          _data$rows = _data.rows,\n          rows = _data$rows === undefined ? [] : _data$rows;\n\n      var extra = {\n        tooltipVisible: this.tooltipVisible,\n        legendVisible: this.legendVisible,\n        echarts: this.echarts,\n        color: this.chartColor,\n        tooltipFormatter: this.tooltipFormatter,\n        _once: this._once\n      };\n      if (this.beforeConfig) data = this.beforeConfig(data);\n\n      var options = this.chartHandler(columns, rows, this.settings, extra);\n      if (options) {\n        if (typeof options.then === 'function') {\n          options.then(this.optionsHandler);\n        } else {\n          this.optionsHandler(options);\n        }\n      }\n    },\n    nextTickResize: function nextTickResize() {\n      this.$nextTick(this.resize);\n    },\n    resize: function resize() {\n      if (!this.cancelResizeCheck) {\n        if (this.$el && this.$el.clientWidth && this.$el.clientHeight) {\n          this.echartsResize();\n        }\n      } else {\n        this.echartsResize();\n      }\n    },\n    echartsResize: function echartsResize() {\n      this.echarts && this.echarts.resize();\n    },\n    optionsHandler: function optionsHandler(options) {\n      var _this = this;\n\n      // legend\n      if (this.legendPosition && options.legend) {\n        options.legend[this.legendPosition] = 10;\n        if (~['left', 'right'].indexOf(this.legendPosition)) {\n          options.legend.top = 'middle';\n          options.legend.orient = 'vertical';\n        }\n      }\n      // color\n      options.color = this.chartColor;\n      // echarts self settings\n      constants.ECHARTS_SETTINGS.forEach(function (setting) {\n        if (_this[setting]) options[setting] = _this[setting];\n      });\n      // animation\n      if (this.animation) setAnimation(options, this.animation);\n      // marks\n      if (this.markArea || this.markLine || this.markPoint) {\n        var marks = {\n          markArea: this.markArea,\n          markLine: this.markLine,\n          markPoint: this.markPoint\n        };\n        var series = options.series;\n        if (utilsLite.isArray(series)) {\n          series.forEach(function (item) {\n            setMark(item, marks);\n          });\n        } else if (utilsLite.isObject(series)) {\n          setMark(series, marks);\n        }\n      }\n      // change inited echarts settings\n      if (this.extend) setExtend(options, this.extend);\n      if (this.afterConfig) options = this.afterConfig(options);\n      var setOptionOpts = this.setOptionOpts;\n      // map chart not merge\n      if ((this.settings.bmap || this.settings.amap) && !utilsLite.isObject(setOptionOpts)) {\n        setOptionOpts = false;\n      }\n      // exclude unchange options\n      if (this.notSetUnchange && this.notSetUnchange.length) {\n        this.notSetUnchange.forEach(function (item) {\n          var value = options[item];\n          if (value) {\n            if (utilsLite.isEqual(value, _this._store[item])) {\n              options[item] = undefined;\n            } else {\n              _this._store[item] = utilsLite.cloneDeep(value);\n            }\n          }\n        });\n        if (utilsLite.isObject(setOptionOpts)) {\n          setOptionOpts.notMerge = false;\n        } else {\n          setOptionOpts = false;\n        }\n      }\n      if (this._isDestroyed) return;\n      if (this.log) console.log(options);\n      this.echarts.setOption(options, setOptionOpts);\n      this.$emit('ready', this.echarts, options, echartsLib);\n      if (!this._once['ready-once']) {\n        this._once['ready-once'] = true;\n        this.$emit('ready-once', this.echarts, options, echartsLib);\n      }\n      if (this.judgeWidth) this.judgeWidthHandler(options);\n      if (this.afterSetOption) this.afterSetOption(this.echarts, options, echartsLib);\n      if (this.afterSetOptionOnce && !this._once['afterSetOptionOnce']) {\n        this._once['afterSetOptionOnce'] = true;\n        this.afterSetOptionOnce(this.echarts, options, echartsLib);\n      }\n    },\n    judgeWidthHandler: function judgeWidthHandler(options) {\n      var _this2 = this;\n\n      var widthChangeDelay = this.widthChangeDelay,\n          resize = this.resize;\n\n      if (this.$el.clientWidth || this.$el.clientHeight) {\n        resize();\n      } else {\n        this.$nextTick(function (_) {\n          if (_this2.$el.clientWidth || _this2.$el.clientHeight) {\n            resize();\n          } else {\n            setTimeout(function (_) {\n              resize();\n              if (!_this2.$el.clientWidth || !_this2.$el.clientHeight) {\n                console.warn(' Can\\'t get dom width or height ');\n              }\n            }, widthChangeDelay);\n          }\n        });\n      }\n    },\n    resizeableHandler: function resizeableHandler(resizeable) {\n      if (resizeable && !this._once.onresize) this.addResizeListener();\n      if (!resizeable && this._once.onresize) this.removeResizeListener();\n    },\n    init: function init() {\n      if (this.echarts) return;\n      var themeName = this.themeName || this.theme || constants.DEFAULT_THEME;\n      this.echarts = echartsLib.init(this.$refs.canvas, themeName, this.initOptions);\n      if (this.data) this.changeHandler();\n      this.createEventProxy();\n      if (this.resizeable) this.addResizeListener();\n    },\n    addResizeListener: function addResizeListener() {\n      window.addEventListener('resize', this.resizeHandler);\n      this._once.onresize = true;\n    },\n    removeResizeListener: function removeResizeListener() {\n      window.removeEventListener('resize', this.resizeHandler);\n      this._once.onresize = false;\n    },\n    addWatchToProps: function addWatchToProps() {\n      var _this3 = this;\n\n      var watchedVariable = this._watchers.map(function (watcher) {\n        return watcher.expression;\n      });\n      Object.keys(this.$props).forEach(function (prop) {\n        if (!~watchedVariable.indexOf(prop) && !~constants.STATIC_PROPS.indexOf(prop)) {\n          var opts = {};\n          if (~['[object Object]', '[object Array]'].indexOf(utilsLite.getType(_this3.$props[prop]))) {\n            opts.deep = true;\n          }\n          _this3.$watch(prop, function () {\n            _this3.changeHandler();\n          }, opts);\n        }\n      });\n    },\n    createEventProxy: function createEventProxy() {\n      var _this4 = this;\n\n      // 只要用户使用 on 方法绑定的事件都做一层代理，\n      // 是否真正执行相应的事件方法取决于该方法是否仍然存在 events 中\n      // 实现 events 的动态响应\n      var self = this;\n      var keys = Object.keys(this.events || {});\n      keys.length && keys.forEach(function (ev) {\n        if (_this4.registeredEvents.indexOf(ev) === -1) {\n          _this4.registeredEvents.push(ev);\n          _this4.echarts.on(ev, function (ev) {\n            return function () {\n              if (ev in self.events) {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = arguments[_key];\n                }\n\n                self.events[ev].apply(null, args);\n              }\n            };\n          }(ev));\n        }\n      });\n    },\n    themeChange: function themeChange(theme) {\n      this.clean();\n      this.echarts = null;\n      this.init();\n    },\n    clean: function clean() {\n      if (this.resizeable) this.removeResizeListener();\n      this.echarts.dispose();\n    }\n  },\n\n  created: function created() {\n    this.echarts = null;\n    this.registeredEvents = [];\n    this._once = {};\n    this._store = {};\n    this.resizeHandler = utilsLite.debounce(this.resize, this.resizeDelay);\n    this.changeHandler = utilsLite.debounce(this.dataHandler, this.changeDelay);\n    this.addWatchToProps();\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clean();\n  },\n\n\n  _numerify: numerify\n};\n\nmodule.exports = core;\n","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar numerify = _interopDefault(require('numerify'));\nvar utilsLite = require('utils-lite');\n\nvar getFormated = function getFormated(val, type, digit) {\n  var defaultVal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n  if (isNaN(val)) return defaultVal;\n  if (!type) return val;\n  if (utilsLite.isFunction(type)) return type(val, numerify);\n\n  digit = isNaN(digit) ? 0 : ++digit;\n  var digitStr = '.[' + new Array(digit).join(0) + ']';\n  var formatter = type;\n  switch (type) {\n    case 'KMB':\n      formatter = digit ? '0,0' + digitStr + 'a' : '0,0a';\n      break;\n    case 'normal':\n      formatter = digit ? '0,0' + digitStr : '0,0';\n      break;\n    case 'percent':\n      formatter = digit ? '0,0' + digitStr + '%' : '0,0.[00]%';\n      break;\n  }\n  return numerify(val, formatter);\n};\n\nvar getStackMap = function getStackMap(stack) {\n  var stackMap = {};\n  Object.keys(stack).forEach(function (item) {\n    stack[item].forEach(function (name) {\n      stackMap[name] = item;\n    });\n  });\n  return stackMap;\n};\n\nvar $get = function $get(url) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.send(null);\n    xhr.onload = function () {\n      resolve(JSON.parse(xhr.responseText));\n    };\n    xhr.onerror = function () {\n      reject(JSON.parse(xhr.responseText));\n    };\n  });\n};\n\nvar mapPromise = {};\n\nvar getMapJSON = function getMapJSON(_ref) {\n  var position = _ref.position,\n      positionJsonLink = _ref.positionJsonLink,\n      beforeRegisterMapOnce = _ref.beforeRegisterMapOnce,\n      mapURLProfix = _ref.mapURLProfix;\n\n  var link = positionJsonLink || '' + mapURLProfix + position + '.json';\n  if (!mapPromise[link]) {\n    mapPromise[link] = $get(link).then(function (res) {\n      if (beforeRegisterMapOnce) res = beforeRegisterMapOnce(res);\n      return res;\n    });\n  }\n  return mapPromise[link];\n};\n\nvar bmapPromise = null;\nvar amapPromise = null;\n\nvar getBmap = function getBmap(key, v) {\n  if (!bmapPromise) {\n    bmapPromise = new Promise(function (resolve, reject) {\n      var callbackName = 'bmap' + Date.now();\n      window[callbackName] = resolve;\n      var script = document.createElement('script');\n      script.src = ['https://api.map.baidu.com/api?v=' + (v || '2.0'), 'ak=' + key, 'callback=' + callbackName].join('&');\n\n      document.body.appendChild(script);\n    });\n  }\n  return bmapPromise;\n};\n\nvar getAmap = function getAmap(key, v) {\n  if (!amapPromise) {\n    amapPromise = new Promise(function (resolve, reject) {\n      var callbackName = 'amap' + Date.now();\n      window[callbackName] = resolve;\n      var script = document.createElement('script');\n      script.src = ['https://webapi.amap.com/maps?v=' + (v || '1.4.3'), 'key=' + key, 'callback=' + callbackName].join('&');\n\n      document.body.appendChild(script);\n    });\n  }\n  return amapPromise;\n};\n\nfunction setArrayValue(arr, index, value) {\n  if (arr[index] !== undefined) {\n    arr[index].push(value);\n  } else {\n    arr[index] = [value];\n  }\n}\n\nexports.getFormated = getFormated;\nexports.getStackMap = getStackMap;\nexports.$get = $get;\nexports.getMapJSON = getMapJSON;\nexports.getBmap = getBmap;\nexports.getAmap = getAmap;\nexports.setArrayValue = setArrayValue;\n","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var ABBR = {\n  th: 3,\n  mi: 6,\n  bi: 9,\n  tr: 12\n};\n\nvar DEFAULT_OPTIONS = {\n  zeroFormat: null,\n  nullFormat: null,\n  defaultFormat: '0,0',\n  scalePercentBy100: true,\n  abbrLabel: {\n    th: 'k',\n    mi: 'm',\n    bi: 'b',\n    tr: 't'\n  }\n};\n\nvar TRILLION = 1e12;\nvar BILLION = 1e9;\nvar MILLION = 1e6;\nvar THOUSAND = 1e3;\n\nfunction numIsNaN(value) {\n  return typeof value === 'number' && isNaN(value);\n}\n\nfunction toFixed(value, maxDecimals, roundingFunction, optionals) {\n  var splitValue = value.toString().split('.');\n  var minDecimals = maxDecimals - (optionals || 0);\n  var boundedPrecision = splitValue.length === 2 ? Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals) : minDecimals;\n  var power = Math.pow(10, boundedPrecision);\n  var output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n  if (optionals > maxDecimals - boundedPrecision) {\n    var optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n    output = output.replace(optionalsRegExp, '');\n  }\n\n  return output;\n}\n\nfunction numberToFormat(options, value, format, roundingFunction) {\n  var abs = Math.abs(value);\n  var negP = false;\n  var optDec = false;\n  var abbr = '';\n  var decimal = '';\n  var neg = false;\n  var abbrForce = void 0;\n  var signed = void 0;\n  format = format || '';\n\n  value = value || 0;\n\n  if (~format.indexOf('(')) {\n    negP = true;\n    format = format.replace(/[(|)]/g, '');\n  } else if (~format.indexOf('+') || ~format.indexOf('-')) {\n    signed = ~format.indexOf('+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n    format = format.replace(/[+|-]/g, '');\n  }\n  if (~format.indexOf('a')) {\n    abbrForce = format.match(/a(k|m|b|t)?/);\n\n    abbrForce = abbrForce ? abbrForce[1] : false;\n\n    if (~format.indexOf(' a')) abbr = ' ';\n    format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n    if (abs >= TRILLION && !abbrForce || abbrForce === 't') {\n      abbr += options.abbrLabel.tr;\n      value = value / TRILLION;\n    } else if (abs < TRILLION && abs >= BILLION && !abbrForce || abbrForce === 'b') {\n      abbr += options.abbrLabel.bi;\n      value = value / BILLION;\n    } else if (abs < BILLION && abs >= MILLION && !abbrForce || abbrForce === 'm') {\n      abbr += options.abbrLabel.mi;\n      value = value / MILLION;\n    } else if (abs < MILLION && abs >= THOUSAND && !abbrForce || abbrForce === 'k') {\n      abbr += options.abbrLabel.th;\n      value = value / THOUSAND;\n    }\n  }\n  if (~format.indexOf('[.]')) {\n    optDec = true;\n    format = format.replace('[.]', '.');\n  }\n  var int = value.toString().split('.')[0];\n  var precision = format.split('.')[1];\n  var thousands = format.indexOf(',');\n  var leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n  if (precision) {\n    if (~precision.indexOf('[')) {\n      precision = precision.replace(']', '');\n      precision = precision.split('[');\n      decimal = toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n    } else {\n      decimal = toFixed(value, precision.length, roundingFunction);\n    }\n\n    int = decimal.split('.')[0];\n    decimal = ~decimal.indexOf('.') ? '.' + decimal.split('.')[1] : '';\n    if (optDec && +decimal.slice(1) === 0) decimal = '';\n  } else {\n    int = toFixed(value, 0, roundingFunction);\n  }\n  if (abbr && !abbrForce && +int >= 1000 && abbr !== ABBR.trillion) {\n    int = '' + +int / 1000;\n    abbr = ABBR.million;\n  }\n  if (~int.indexOf('-')) {\n    int = int.slice(1);\n    neg = true;\n  }\n  if (int.length < leadingCount) {\n    for (var i = leadingCount - int.length; i > 0; i--) {\n      int = '0' + int;\n    }\n  }\n\n  if (thousands > -1) {\n    int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + ',');\n  }\n\n  if (!format.indexOf('.')) int = '';\n\n  var output = int + decimal + (abbr || '');\n\n  if (negP) {\n    output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n  } else {\n    if (signed >= 0) {\n      output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n    } else if (neg) {\n      output = '-' + output;\n    }\n  }\n\n  return output;\n}\n\nfunction extend(target, sub) {\n  Object.keys(sub).forEach(function (key) {\n    target[key] = sub[key];\n  });\n}\n\nvar numerifyPercent = {\n  regexp: /%/,\n  format: function format(value, formatType, roundingFunction, numerify) {\n    var space = ~formatType.indexOf(' %') ? ' ' : '';\n    var output = void 0;\n\n    if (numerify.options.scalePercentBy100) value = value * 100;\n\n    formatType = formatType.replace(/\\s?%/, '');\n\n    output = numerify._numberToFormat(value, formatType, roundingFunction);\n\n    if (~output.indexOf(')')) {\n      output = output.split('');\n      output.splice(-1, 0, space + '%');\n      output = output.join('');\n    } else {\n      output = output + space + '%';\n    }\n\n    return output;\n  }\n};\n\nvar options = {};\nvar formats = {};\n\nextend(options, DEFAULT_OPTIONS);\n\nfunction format(value, formatType, roundingFunction) {\n  formatType = formatType || options.defaultFormat;\n  roundingFunction = roundingFunction || Math.round;\n  var output = void 0;\n  var formatFunction = void 0;\n\n  if (value === 0 && options.zeroFormat !== null) {\n    output = options.zeroFormat;\n  } else if (value === null && options.nullFormat !== null) {\n    output = options.nullFormat;\n  } else {\n    for (var kind in formats) {\n      if (formats[kind] && formatType.match(formats[kind].regexp)) {\n        formatFunction = formats[kind].format;\n        break;\n      }\n    }\n    formatFunction = formatFunction || numberToFormat.bind(null, options);\n    output = formatFunction(value, formatType, roundingFunction, numerify);\n  }\n\n  return output;\n}\n\nfunction numerify(input, formatType, roundingFunction) {\n  var value = void 0;\n\n  if (input === 0 || typeof input === 'undefined') {\n    value = 0;\n  } else if (input === null || numIsNaN(input)) {\n    value = null;\n  } else if (typeof input === 'string') {\n    if (options.zeroFormat && input === options.zeroFormat) {\n      value = 0;\n    } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n      value = null;\n    } else {\n      value = +input;\n    }\n  } else {\n    value = +input || null;\n  }\n\n  return format(value, formatType, roundingFunction);\n}\n\nnumerify.options = options;\nnumerify._numberToFormat = numberToFormat.bind(null, options);\nnumerify.register = function (name, format) {\n  formats[name] = format;\n};\nnumerify.unregister = function (name) {\n  formats[name] = null;\n};\nnumerify.setOptions = function (opts) {\n  extend(options, opts);\n};\nnumerify.reset = function () {\n  extend(options, DEFAULT_OPTIONS);\n};\n\nnumerify.register('percentage', numerifyPercent);\n\nexport default numerify;\n","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar DEFAULT_THEME = {\n  categoryAxis: {\n    axisLine: { show: false },\n    axisTick: { show: false },\n    splitLine: { show: false }\n  },\n  valueAxis: {\n    axisLine: { show: false }\n  },\n  line: {\n    smooth: true\n  },\n  grid: {\n    containLabel: true,\n    left: 10,\n    right: 10\n  }\n};\n\nvar DEFAULT_COLORS = ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'];\n\nvar HEAT_MAP_COLOR = ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026'];\n\nvar HEAT_BMAP_COLOR = ['blue', 'blue', 'green', 'yellow', 'red'];\n\nvar itemPoint = function itemPoint(color) {\n  return ['<span style=\"', 'background-color:' + color + ';', 'display: inline-block;', 'width: 10px;', 'height: 10px;', 'border-radius: 50%;', 'margin-right:2px;', '\"></span>'].join('');\n};\n\nvar STATIC_PROPS = ['initOptions', 'loading', 'dataEmpty', 'judgeWidth', 'widthChangeDelay'];\n\nvar ECHARTS_SETTINGS = ['grid', 'dataZoom', 'visualMap', 'toolbox', 'title', 'legend', 'xAxis', 'yAxis', 'radar', 'tooltip', 'axisPointer', 'brush', 'geo', 'timeline', 'graphic', 'series', 'backgroundColor', 'textStyle'];\n\nexports.DEFAULT_THEME = DEFAULT_THEME;\nexports.DEFAULT_COLORS = DEFAULT_COLORS;\nexports.HEAT_MAP_COLOR = HEAT_MAP_COLOR;\nexports.HEAT_BMAP_COLOR = HEAT_BMAP_COLOR;\nexports.itemPoint = itemPoint;\nexports.STATIC_PROPS = STATIC_PROPS;\nexports.ECHARTS_SETTINGS = ECHARTS_SETTINGS;\n","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar utils = require('./utils');\nvar utilsLite = require('utils-lite');\nrequire('echarts/lib/chart/line');\nvar Core = _interopDefault(require('./core'));\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction getLineXAxis(args) {\n  var dimension = args.dimension,\n      rows = args.rows,\n      xAxisName = args.xAxisName,\n      axisVisible = args.axisVisible,\n      xAxisType = args.xAxisType;\n\n  return dimension.map(function (item, index) {\n    return {\n      type: xAxisType,\n      nameLocation: 'middle',\n      nameGap: 22,\n      name: xAxisName[index] || '',\n      axisTick: { show: true, lineStyle: { color: '#eee' } },\n      data: rows.map(function (row) {\n        return row[item];\n      }),\n      show: axisVisible\n    };\n  });\n}\n\nfunction getLineSeries(args) {\n  var rows = args.rows,\n      axisSite = args.axisSite,\n      metrics = args.metrics,\n      area = args.area,\n      stack = args.stack,\n      nullAddZero = args.nullAddZero,\n      labelMap = args.labelMap,\n      label = args.label,\n      itemStyle = args.itemStyle,\n      lineStyle = args.lineStyle,\n      areaStyle = args.areaStyle,\n      dimension = args.dimension;\n\n  var series = [];\n  var dataTemp = {};\n  var stackMap = stack && utils.getStackMap(stack);\n  metrics.forEach(function (item) {\n    dataTemp[item] = [];\n  });\n  rows.forEach(function (row) {\n    metrics.forEach(function (item) {\n      var value = null;\n      if (row[item] != null) {\n        value = row[item];\n      } else if (nullAddZero) {\n        value = 0;\n      }\n      dataTemp[item].push([row[dimension[0]], value]);\n    });\n  });\n  metrics.forEach(function (item) {\n    var seriesItem = {\n      name: labelMap[item] != null ? labelMap[item] : item,\n      type: 'line',\n      data: dataTemp[item]\n    };\n\n    if (area) seriesItem.areaStyle = { normal: {} };\n    if (axisSite.right) {\n      seriesItem.yAxisIndex = ~axisSite.right.indexOf(item) ? 1 : 0;\n    }\n\n    if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n    if (label) seriesItem.label = label;\n    if (itemStyle) seriesItem.itemStyle = itemStyle;\n    if (lineStyle) seriesItem.lineStyle = lineStyle;\n    if (areaStyle) seriesItem.areaStyle = areaStyle;\n\n    series.push(seriesItem);\n  });\n  return series;\n}\n\nfunction getLineYAxis(args) {\n  var yAxisName = args.yAxisName,\n      yAxisType = args.yAxisType,\n      axisVisible = args.axisVisible,\n      scale = args.scale,\n      min = args.min,\n      max = args.max,\n      digit = args.digit;\n\n  var yAxisBase = {\n    type: 'value',\n    axisTick: {\n      show: false\n    },\n    show: axisVisible\n  };\n  var yAxis = [];\n\n  var _loop = function _loop(i) {\n    if (yAxisType[i]) {\n      yAxis[i] = _extends({}, yAxisBase, {\n        axisLabel: {\n          formatter: function formatter(val) {\n            return utils.getFormated(val, yAxisType[i], digit);\n          }\n        }\n      });\n    } else {\n      yAxis[i] = _extends({}, yAxisBase);\n    }\n    yAxis[i].name = yAxisName[i] || '';\n    yAxis[i].scale = scale[i] || false;\n    yAxis[i].min = min[i] || null;\n    yAxis[i].max = max[i] || null;\n  };\n\n  for (var i = 0; i < 2; i++) {\n    _loop(i);\n  }\n  return yAxis;\n}\n\nfunction getLineTooltip(args) {\n  var axisSite = args.axisSite,\n      yAxisType = args.yAxisType,\n      digit = args.digit,\n      labelMap = args.labelMap,\n      tooltipFormatter = args.tooltipFormatter;\n\n  var rightItems = axisSite.right || [];\n  var rightList = labelMap ? rightItems.map(function (item) {\n    return labelMap[item] === undefined ? item : labelMap[item];\n  }) : rightItems;\n  return {\n    trigger: 'axis',\n    formatter: function formatter(items) {\n      if (tooltipFormatter) {\n        return tooltipFormatter.apply(null, arguments);\n      }\n      var tpl = [];\n      var _items$ = items[0],\n          name = _items$.name,\n          axisValueLabel = _items$.axisValueLabel;\n\n      var title = name || axisValueLabel;\n      tpl.push(title + '<br>');\n      items.forEach(function (_ref) {\n        var seriesName = _ref.seriesName,\n            data = _ref.data,\n            marker = _ref.marker;\n\n        var showData = null;\n        var type = ~rightList.indexOf(seriesName) ? yAxisType[1] : yAxisType[0];\n        var itemData = utilsLite.isArray(data) ? data[1] : data;\n        showData = utils.getFormated(itemData, type, digit);\n        tpl.push(marker);\n        tpl.push(seriesName + ': ' + showData);\n        tpl.push('<br>');\n      });\n      return tpl.join('');\n    }\n  };\n}\n\nfunction getLegend(args) {\n  var metrics = args.metrics,\n      legendName = args.legendName,\n      labelMap = args.labelMap;\n\n  if (!legendName && !labelMap) return { data: metrics };\n  var data = labelMap ? metrics.map(function (item) {\n    return labelMap[item] == null ? item : labelMap[item];\n  }) : metrics;\n  return {\n    data: data,\n    formatter: function formatter(name) {\n      return legendName[name] != null ? legendName[name] : name;\n    }\n  };\n}\n\nvar line$1 = function line$$1(columns, rows, settings, extra) {\n  rows = utilsLite.isArray(rows) ? rows : [];\n  columns = utilsLite.isArray(columns) ? columns : [];\n  var _settings$axisSite = settings.axisSite,\n      axisSite = _settings$axisSite === undefined ? {} : _settings$axisSite,\n      _settings$yAxisType = settings.yAxisType,\n      yAxisType = _settings$yAxisType === undefined ? ['normal', 'normal'] : _settings$yAxisType,\n      _settings$xAxisType = settings.xAxisType,\n      xAxisType = _settings$xAxisType === undefined ? 'category' : _settings$xAxisType,\n      _settings$yAxisName = settings.yAxisName,\n      yAxisName = _settings$yAxisName === undefined ? [] : _settings$yAxisName,\n      _settings$dimension = settings.dimension,\n      dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n      _settings$xAxisName = settings.xAxisName,\n      xAxisName = _settings$xAxisName === undefined ? [] : _settings$xAxisName,\n      _settings$axisVisible = settings.axisVisible,\n      axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n      area = settings.area,\n      stack = settings.stack,\n      _settings$scale = settings.scale,\n      scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n      _settings$min = settings.min,\n      min = _settings$min === undefined ? [null, null] : _settings$min,\n      _settings$max = settings.max,\n      max = _settings$max === undefined ? [null, null] : _settings$max,\n      _settings$nullAddZero = settings.nullAddZero,\n      nullAddZero = _settings$nullAddZero === undefined ? false : _settings$nullAddZero,\n      _settings$digit = settings.digit,\n      digit = _settings$digit === undefined ? 2 : _settings$digit,\n      _settings$legendName = settings.legendName,\n      legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n      _settings$labelMap = settings.labelMap,\n      labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n      label = settings.label,\n      itemStyle = settings.itemStyle,\n      lineStyle = settings.lineStyle,\n      areaStyle = settings.areaStyle;\n  var tooltipVisible = extra.tooltipVisible,\n      legendVisible = extra.legendVisible,\n      tooltipFormatter = extra.tooltipFormatter;\n\n  var metrics = columns.slice();\n\n  if (axisSite.left && axisSite.right) {\n    metrics = axisSite.left.concat(axisSite.right);\n  } else if (axisSite.left && !axisSite.right) {\n    metrics = axisSite.left;\n  } else if (settings.metrics) {\n    metrics = settings.metrics;\n  } else {\n    metrics.splice(columns.indexOf(dimension[0]), 1);\n  }\n\n  var legend = legendVisible && getLegend({ metrics: metrics, legendName: legendName, labelMap: labelMap });\n  var tooltip = tooltipVisible && getLineTooltip({\n    axisSite: axisSite,\n    yAxisType: yAxisType,\n    digit: digit,\n    labelMap: labelMap,\n    xAxisType: xAxisType,\n    tooltipFormatter: tooltipFormatter\n  });\n  var xAxis = getLineXAxis({\n    dimension: dimension,\n    rows: rows,\n    xAxisName: xAxisName,\n    axisVisible: axisVisible,\n    xAxisType: xAxisType\n  });\n  var yAxis = getLineYAxis({\n    yAxisName: yAxisName,\n    yAxisType: yAxisType,\n    axisVisible: axisVisible,\n    scale: scale,\n    min: min,\n    max: max,\n    digit: digit\n  });\n  var series = getLineSeries({\n    rows: rows,\n    axisSite: axisSite,\n    metrics: metrics,\n    area: area,\n    stack: stack,\n    nullAddZero: nullAddZero,\n    labelMap: labelMap,\n    label: label,\n    itemStyle: itemStyle,\n    lineStyle: lineStyle,\n    areaStyle: areaStyle,\n    xAxisType: xAxisType,\n    dimension: dimension\n  });\n  var options = { legend: legend, xAxis: xAxis, series: series, yAxis: yAxis, tooltip: tooltip };\n  return options;\n};\n\nvar index = _extends({}, Core, {\n  name: 'VeLine',\n  data: function data() {\n    this.chartHandler = line$1;\n    return {};\n  }\n});\n\nmodule.exports = index;\n","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}