{"version":3,"sources":["webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/v-charts/lib/bar.common.js"],"names":["BaseBarSeries","__webpack_require__","_default","extend","type","dependencies","brushSelector","getProgressive","this","get","getProgressiveThreshold","progressiveThreshold","largeThreshold","module","exports","SeriesModel","createListFromArray","getInitialData","option","ecModel","getSource","getMarkerPosition","value","coordSys","coordinateSystem","pt","dataToPoint","clampData","data","getData","offset","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","NaN","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","large","progressive","progressiveChunkMode","itemStyle","emphasis","_config","echarts","__DEV__","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","Path","BAR_BORDER_WIDTH_QUERY","prototype","extendChartView","render","seriesModel","api","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","isHorizontalOrRadial","oldData","_data","coord","baseAxis","dim","animationModel","isAnimationEnabled","diff","add","dataIndex","hasValue","itemModel","getItemModel","layout","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","getItemGraphicEl","updateProps","shape","remove","removeRect","removeSector","execute","createLarge","dispose","noop","eachItemGraphicEl","removeAll","cartesian2d","isUpdate","rect","Rect","rectShape","animateProperty","animateTarget","polar","isRadial","clockwise","startAngle","endAngle","sector","Sector","defaults","sectorShape","style","text","width","parent","r","r0","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","height","x","y","cx","cy","isPolar","color","getItemVisual","opacity","itemStyleModel","getModel","hoverStyle","getBarItemStyle","setShape","useStyle","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","Math","min","abs","LargePath","points","buildPath","ctx","startPoint","__startPoint","valueIdx","__valueIdx","i","length","moveTo","lineTo","incremental","setLargeStyle","borderColor","getVisual","getItemStyle","stroke","_barGrid","largeLayout","registerLayout","curry","registerVisual","seriesType","reset","setVisual","makeStyleMapper","excludes","getBorderLineDash","lineDash","_labelHelper","getDefaultLabel","normalStyle","labelModel","hoverLabelModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","fixPosition","textPosition","_interopDefault","ex","constants","utils","utilsLite","Core","defineProperty","obj","key","Object","enumerable","configurable","writable","_extends","assign","target","arguments","source","hasOwnProperty","call","VALUE_AXIS_OPACITY","getBarDimAxis","args","innerRows","dimAxisName","dimension","axisVisible","dimAxisType","dims","map","item","name","nameLocation","nameGap","getValueAxisData","row","axisLabel","formatter","v","String","show","max","apply","result","push","getBarMeaAxis","meaAxisName","meaAxisType","digit","scale","meaAxisBase","axisTick","meaAxis","_loop","val","getFormated","getBarTooltip","axisSite","isHistogram","labelMap","secondAxis","right","top","undefined","trigger","items","tpl","forEach","seriesName","indexOf","itemPoint","join","getValueData","seriesTemp","index","getBarSeries","metrics","stack","label","_args$showLine","showLine","barGap","series","secondDimAxisIndex","stackMap","getStackMap","keys","seriesItem","itemOpacity","barCategoryGap","set","getLegend","legendName","getDims","rows","bar$1","columns","settings","extra","cloneDeep","_settings$axisSite","_settings$dimension","_settings$stack","_settings$axisVisible","_settings$digit","_settings$dataOrder","dataOrder","_settings$scale","_settings$min","_settings$max","_settings$legendName","_settings$labelMap","_settings$barGap","tooltipVisible","legendVisible","slice","bottom","concat","splice","xAxisType","yAxisType","xAxisName","yAxisName","_label","order","sort","a","b","console","warn","legend","yAxis","xAxis","tooltipParams","tooltip","options","chartHandler"],"mappings":"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","file":"js/statistics-dashboard~statistics-miniprogram.a2ad48b6.js","sourcesContent":["var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar constants = require('./constants');\nvar utils = require('./utils');\nvar utilsLite = require('utils-lite');\nrequire('echarts/lib/chart/bar');\nvar Core = _interopDefault(require('./core'));\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n// default opacity of bar while dim-axis type is 'value'\nvar VALUE_AXIS_OPACITY = 0.5;\n\nfunction getBarDimAxis(args) {\n  var innerRows = args.innerRows,\n      dimAxisName = args.dimAxisName,\n      dimension = args.dimension,\n      axisVisible = args.axisVisible,\n      dimAxisType = args.dimAxisType,\n      dims = args.dims;\n\n  return dimension.map(function (item) {\n    return {\n      type: 'category',\n      name: dimAxisName,\n      nameLocation: 'middle',\n      nameGap: 22,\n      data: dimAxisType === 'value' ? getValueAxisData(dims) : innerRows.map(function (row) {\n        return row[item];\n      }),\n      axisLabel: {\n        formatter: function formatter(v) {\n          return String(v);\n        }\n      },\n      show: axisVisible\n    };\n  });\n}\n\nfunction getValueAxisData(dims) {\n  var max = Math.max.apply(null, dims);\n  var min = Math.min.apply(null, dims);\n  var result = [];\n  for (var i = min; i <= max; i++) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction getBarMeaAxis(args) {\n  var meaAxisName = args.meaAxisName,\n      meaAxisType = args.meaAxisType,\n      axisVisible = args.axisVisible,\n      digit = args.digit,\n      scale = args.scale,\n      min = args.min,\n      max = args.max;\n\n  var meaAxisBase = {\n    type: 'value',\n    axisTick: {\n      show: false\n    },\n    show: axisVisible\n  };\n  var meaAxis = [];\n\n  var _loop = function _loop(i) {\n    if (meaAxisType[i]) {\n      meaAxis[i] = _extends({}, meaAxisBase, {\n        axisLabel: {\n          formatter: function formatter(val) {\n            return utils.getFormated(val, meaAxisType[i], digit);\n          }\n        }\n      });\n    } else {\n      meaAxis[i] = _extends({}, meaAxisBase);\n    }\n    meaAxis[i].name = meaAxisName[i] || '';\n    meaAxis[i].scale = scale[i] || false;\n    meaAxis[i].min = min[i] || null;\n    meaAxis[i].max = max[i] || null;\n  };\n\n  for (var i = 0; i < 2; i++) {\n    _loop(i);\n  }\n\n  return meaAxis;\n}\n\nfunction getBarTooltip(args) {\n  var axisSite = args.axisSite,\n      isHistogram = args.isHistogram,\n      meaAxisType = args.meaAxisType,\n      digit = args.digit,\n      labelMap = args.labelMap;\n\n  var secondAxis = isHistogram ? axisSite.right || [] : axisSite.top || [];\n  if (labelMap) {\n    secondAxis = secondAxis.map(function (item) {\n      return labelMap[item] === undefined ? item : labelMap[item];\n    });\n  }\n  return {\n    trigger: 'axis',\n    formatter: function formatter(items) {\n      var tpl = [];\n      tpl.push(items[0].name + '<br>');\n      items.forEach(function (item) {\n        var seriesName = item.seriesName;\n        var type = ~secondAxis.indexOf(seriesName) ? meaAxisType[1] : meaAxisType[0];\n        tpl.push(constants.itemPoint(item.color));\n        tpl.push(seriesName + ': ');\n        tpl.push(utils.getFormated(item.value, type, digit));\n        tpl.push('<br>');\n      });\n\n      return tpl.join('');\n    }\n  };\n}\n\nfunction getValueData(seriesTemp, dims) {\n  var max = Math.max.apply(null, dims);\n  var min = Math.min.apply(null, dims);\n  var result = [];\n  for (var i = min; i <= max; i++) {\n    var index = dims.indexOf(i);\n    if (~index) {\n      result.push(seriesTemp[index]);\n    } else {\n      result.push(null);\n    }\n  }\n  return result;\n}\n\nfunction getBarSeries(args) {\n  var innerRows = args.innerRows,\n      metrics = args.metrics,\n      stack = args.stack,\n      axisSite = args.axisSite,\n      isHistogram = args.isHistogram,\n      labelMap = args.labelMap,\n      itemStyle = args.itemStyle,\n      label = args.label,\n      _args$showLine = args.showLine,\n      showLine = _args$showLine === undefined ? [] : _args$showLine,\n      dimAxisType = args.dimAxisType,\n      barGap = args.barGap,\n      opacity = args.opacity,\n      dims = args.dims;\n\n  var series = [];\n  var seriesTemp = {};\n  var secondAxis = isHistogram ? axisSite.right || [] : axisSite.top || [];\n  var secondDimAxisIndex = isHistogram ? 'yAxisIndex' : 'xAxisIndex';\n  var stackMap = stack && utils.getStackMap(stack);\n  metrics.forEach(function (item) {\n    seriesTemp[item] = [];\n  });\n  innerRows.forEach(function (row) {\n    metrics.forEach(function (item) {\n      seriesTemp[item].push(row[item]);\n    });\n  });\n  series = Object.keys(seriesTemp).map(function (item, index) {\n    var data = dimAxisType === 'value' ? getValueData(seriesTemp[item], dims) : seriesTemp[item];\n    var seriesItem = defineProperty({\n      name: labelMap[item] != null ? labelMap[item] : item,\n      type: ~showLine.indexOf(item) ? 'line' : 'bar',\n      data: data\n    }, secondDimAxisIndex, ~secondAxis.indexOf(item) ? '1' : '0');\n\n    if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n    if (label) seriesItem.label = label;\n    if (itemStyle) seriesItem.itemStyle = itemStyle;\n\n    var itemOpacity = opacity || utilsLite.get(seriesItem, 'itemStyle.normal.opacity');\n    if (dimAxisType === 'value') {\n      seriesItem.barGap = barGap;\n      seriesItem.barCategoryGap = '1%';\n      if (itemOpacity == null) itemOpacity = VALUE_AXIS_OPACITY;\n    }\n\n    if (itemOpacity != null) {\n      utilsLite.set(seriesItem, 'itemStyle.normal.opacity', itemOpacity);\n    }\n\n    return seriesItem;\n  });\n\n  return series.length ? series : false;\n}\n\nfunction getLegend(args) {\n  var metrics = args.metrics,\n      labelMap = args.labelMap,\n      legendName = args.legendName;\n\n  if (!legendName && !labelMap) return { data: metrics };\n  var data = labelMap ? metrics.map(function (item) {\n    return labelMap[item] == null ? item : labelMap[item];\n  }) : metrics;\n  return {\n    data: data,\n    formatter: function formatter(name) {\n      return legendName[name] != null ? legendName[name] : name;\n    }\n  };\n}\n\nfunction getDims(rows, dimension) {\n  return rows.map(function (row) {\n    return row[dimension[0]];\n  });\n}\n\nvar bar$1 = function bar$$1(columns, rows, settings, extra) {\n  var innerRows = utilsLite.cloneDeep(rows);\n  var _settings$axisSite = settings.axisSite,\n      axisSite = _settings$axisSite === undefined ? {} : _settings$axisSite,\n      _settings$dimension = settings.dimension,\n      dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n      _settings$stack = settings.stack,\n      stack = _settings$stack === undefined ? {} : _settings$stack,\n      _settings$axisVisible = settings.axisVisible,\n      axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n      _settings$digit = settings.digit,\n      digit = _settings$digit === undefined ? 2 : _settings$digit,\n      _settings$dataOrder = settings.dataOrder,\n      dataOrder = _settings$dataOrder === undefined ? false : _settings$dataOrder,\n      _settings$scale = settings.scale,\n      scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n      _settings$min = settings.min,\n      min = _settings$min === undefined ? [null, null] : _settings$min,\n      _settings$max = settings.max,\n      max = _settings$max === undefined ? [null, null] : _settings$max,\n      _settings$legendName = settings.legendName,\n      legendName = _settings$legendName === undefined ? {} : _settings$legendName,\n      _settings$labelMap = settings.labelMap,\n      labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n      label = settings.label,\n      itemStyle = settings.itemStyle,\n      showLine = settings.showLine,\n      _settings$barGap = settings.barGap,\n      barGap = _settings$barGap === undefined ? '-100%' : _settings$barGap,\n      opacity = settings.opacity;\n  var tooltipVisible = extra.tooltipVisible,\n      legendVisible = extra.legendVisible;\n\n  var metrics = columns.slice();\n  if (axisSite.top && axisSite.bottom) {\n    metrics = axisSite.top.concat(axisSite.bottom);\n  } else if (axisSite.bottom && !axisSite.right) {\n    metrics = axisSite.bottom;\n  } else if (settings.metrics) {\n    metrics = settings.metrics;\n  } else {\n    metrics.splice(columns.indexOf(dimension[0]), 1);\n  }\n  var meaAxisType = settings.xAxisType || ['normal', 'normal'];\n  var dimAxisType = settings.yAxisType || 'category';\n  var meaAxisName = settings.xAxisName || [];\n  var dimAxisName = settings.yAxisName || '';\n  var isHistogram = false;\n\n  if (dataOrder) {\n    var _label = dataOrder.label,\n        order = dataOrder.order;\n\n    if (!_label || !order) {\n      console.warn('Need to provide name and order parameters');\n    } else {\n      innerRows.sort(function (a, b) {\n        if (order === 'desc') {\n          return a[_label] - b[_label];\n        } else {\n          return b[_label] - a[_label];\n        }\n      });\n    }\n  }\n  var dims = getDims(innerRows, dimension);\n\n  var legend = legendVisible && getLegend({ metrics: metrics, labelMap: labelMap, legendName: legendName });\n  var yAxis = getBarDimAxis({\n    innerRows: innerRows,\n    dimAxisName: dimAxisName,\n    dimension: dimension,\n    axisVisible: axisVisible,\n    dimAxisType: dimAxisType,\n    dims: dims\n  });\n  var xAxis = getBarMeaAxis({\n    meaAxisName: meaAxisName,\n    meaAxisType: meaAxisType,\n    axisVisible: axisVisible,\n    digit: digit,\n    scale: scale,\n    min: min,\n    max: max\n  });\n  var series = getBarSeries({\n    innerRows: innerRows,\n    metrics: metrics,\n    stack: stack,\n    axisSite: axisSite,\n    isHistogram: isHistogram,\n    labelMap: labelMap,\n    itemStyle: itemStyle,\n    label: label,\n    showLine: showLine,\n    dimAxisType: dimAxisType,\n    dimension: dimension,\n    barGap: barGap,\n    opacity: opacity,\n    dims: dims\n  });\n  var tooltipParams = { axisSite: axisSite, isHistogram: isHistogram, meaAxisType: meaAxisType, digit: digit, labelMap: labelMap };\n  var tooltip = tooltipVisible && getBarTooltip(tooltipParams);\n  var options = { legend: legend, yAxis: yAxis, series: series, xAxis: xAxis, tooltip: tooltip };\n  return options;\n};\n\nvar index = _extends({}, Core, {\n  name: 'VeBar',\n  data: function data() {\n    this.chartHandler = bar$1;\n    return {};\n  }\n});\n\nmodule.exports = index;\n"],"sourceRoot":""}